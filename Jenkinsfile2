pipeline {
    agent any
    stages {
        stage('Run OWASP ZAP Scan') {
            steps {
                script {
                    sh '''
                    # Iniciar un escaneo Spider para agregar la URL al Ã¡rbol de escaneo
                    curl -k "https://172.25.93.19:8090/JSON/spider/action/scan/?url=http://localhost:8000"

                    # Esperar hasta que el escaneo Spider termine
                    while [ "$(curl -s -k https://172.25.93.19:8090/JSON/spider/view/status/ | jq .status)" != "100" ]; do
                        echo "Escaneo Spider en progreso..."
                        sleep 5
                    done

                    # Iniciar un escaneo activo usando la API de ZAP
                    curl -k "https://172.25.93.19:8090/JSON/ascan/action/scan/?url=http://localhost:8000"

                    # Esperar hasta que el escaneo activo termine
                    while [ "$(curl -s -k https://172.25.93.19:8090/JSON/ascan/view/status/ | jq .status)" != "100" ]; do
                        echo "Escaneo activo en progreso..."
                        sleep 5
                    done

                    # Descargar el informe HTML
                    curl -k "https://172.25.93.19:8090/OTHER/core/other/htmlreport/" > zap-report.html
                    '''
                }
            }
        }
    }
    post {
        always {
            archiveArtifacts artifacts: 'zap-report.html', fingerprint: true
        }
    }
}
